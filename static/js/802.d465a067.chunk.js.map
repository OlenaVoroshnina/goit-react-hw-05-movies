{"version":3,"file":"static/js/802.d465a067.chunk.js","mappings":"kOA8CA,UAzCe,WACb,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA+BT,GAA/B,uFAEII,GAAa,GAFjB,UAGuBM,EAAAA,EAAAA,IAAmBV,GAH1C,OAGUW,EAHV,OAIIH,EAAWG,EAAKC,SAJpB,gDAMIN,EAAS,KAAMO,SANnB,yBAQIT,GAAa,GARjB,4EADc,yBAAC,SAAD,2BAYdU,CAAgBd,EACjB,GAAE,CAACA,KAGF,0BACGG,IAAa,SAAC,IAAD,IACbI,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,SAAAC,GACV,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,2BACE,mCAAWD,MACX,yBAAIC,EAAJ,SAFOD,EAKZ,KAED,oEAEDb,IAAS,wBAAKA,MAGpB,C,+LC3CDe,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,mCAAG,sGACPD,EAAAA,EAAAA,IACrB,gEAF4B,uBACtBT,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBW,EAAY,mCAAG,WAAMtB,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,8CADG,uBAClBW,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZY,EAAgB,mCAAG,WAAMvB,GAAN,yFACPoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,sDADO,uBACtBW,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBD,EAAkB,mCAAG,WAAMV,GAAN,yFACToB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,sDADS,uBACxBW,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBa,EAAW,mCAAG,WAAMC,GAAN,yFACFL,EAAAA,EAAAA,IAAA,sFAC0DK,EAD1D,gCADE,uBACjBd,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["components/Review/Review.jsx","service/service.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieByIdReview } from 'service/service';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function movieByIdReview(movieId) {\n      try {\n        setIsLoading(true);\n        const data = await getMovieByIdReview(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    movieByIdReview(movieId);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        reviews.map(review => {\n          const { author, content } = review;\n          return (\n            <li key={author}>\n              <p>Autor: {author}</p>\n              <p>{content} </p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n      {error && <h1>{error}</h1>}\n    </ul>\n  );\n};\nexport default Review;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get(\n    '/trending/movie/day?api_key=3935c979547c0c6651e8430ea668493f'\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=3935c979547c0c6651e8430ea668493f`\n  );\n  return data;\n};\n\nexport const getMovieByIdCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=3935c979547c0c6651e8430ea668493f`\n  );\n  return data;\n};\n\nexport const getMovieByIdReview = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=3935c979547c0c6651e8430ea668493f`\n  );\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=3935c979547c0c6651e8430ea668493f&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["movieId","useParams","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","useEffect","getMovieByIdReview","data","results","message","movieByIdReview","length","map","review","author","content","axios","getTrendingMovie","getMovieById","getMovieByIdCast","searchMovie","query"],"sourceRoot":""}